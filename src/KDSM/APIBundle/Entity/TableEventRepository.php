<?php

namespace KDSM\APIBundle\Entity;

use Doctrine\ORM\EntityRepository;
use DateInterval;

/**
 * TableEventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TableEventRepository extends EntityRepository
{
    public function getLatestEvent(){
        $query = $this->createQueryBuilder('tb');
        $query->select('MAX(tb.eventId)');
        if($query->getQuery()->getResult()[0][1])
            return $query->getQuery()->getResult()[0][1];
        else
            return 1;
    }

    public function getShakeCountAtMinute($timestamp){
        $shakeEventId = $this->getEntityManager()->getRepository('KDSMAPIBundle:TableEventType')
            ->findOneBy(array('name' => 'TableShake'))->getId();

        $query = $this->createQueryBuilder('tb');
        $query->select('COUNT(tb.eventId)')
            ->where('tb.typeId = ?1')
            ->andWhere('tb.timesec >= ?2')
            ->andWhere('tb.timesec <= ?3');

        $query->setParameters(array(1 => $shakeEventId, 2 => date('Y-m-d H:i:s', $timestamp), 3 => date('Y-m-d H:i:s', $timestamp+60)));

        if($query->getQuery()->getResult()[0][1])
            return $query->getQuery()->getResult()[0][1];
        else
            return 0;
    }

    public function persistObject($newEvent){
        $this->getEntityManager()->persist($newEvent);
        $this->getEntityManager()->flush();
    }
}
